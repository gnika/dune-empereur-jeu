<?phpclass Produit_Model_CategorieUnite {    protected $_pc_id;    protected $_pc_categorie;     public function __construct(array $options = null)    {        if (is_array($options)) {            $this->setOptions($options);        }    }    public function __set($name, $value)    {        if ( strpos( $name, '_' ) ) {            $method = explode( '_' , $name );            $method = 'set' . ucfirst( $method[1] );        }        else {             $method = 'set' . $name;        }        if (('mapper' == $name) || !method_exists($this, $method)) {            throw new Exception('Invalid category property');        }        $this->$method($value);    }    public function __get($name)    {        if ( strpos( $name, '_' ) ) {            $method = explode( '_' , $name );            $method = 'get' . ucfirst( $method[1] );        }        else {             $method = 'get' . $name;        }           if (('mapper' == $name) || !method_exists($this, $method)) {            throw new Exception('Invalid category property');        }        return $this->$method();    }     public function setOptions(array $options)    {        $methods = get_class_methods($this);        foreach ($options as $key => $value) {            $method = 'set' . ucfirst($key);            if (in_array($method, $methods)) {                $this->$method($value);            }        }        return $this;    }     public function setCategorieUnite($text)    {        $this->_pc_categorie = (string) $text;        return $this;    }    public function getCategorieUnite()    {        return $this->_pc_categorie;    }     public function setId($id)    {        $this->_pc_id = (int) $id;        return $this;    }     public function getId()    {        return $this->_pc_id;    }}