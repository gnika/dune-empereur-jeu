<?phpclass Produit_Model_Mapper_CategorieUnite{    protected $_dbTable;       public function setDbTable($dbTable)    {        if (is_string($dbTable)) {            $dbTable = new $dbTable();        }        if (!$dbTable instanceof Zend_Db_Table_Abstract) {            throw new Exception('Invalid table data gateway provided');        }        $this->_dbTable = $dbTable;        return $this;    }    public function getDbTable()    {        if (null === $this->_dbTable) {            $this->setDbTable('Produit_Model_DbTable_CategorieUnite');        }        return $this->_dbTable;    }        public function save(Produit_Model_CategorieUnite $categorie)    {        $data = array(  'pc_id'             => $categorie->getId(),                        'pc_categorie'      => $categorie->getcategorie()                    );        if (null === ($id = $categorie->getId())) {            unset($data['pc_id']);            $this->getDbTable()->insert($data);        } else {            $this->getDbTable()->update($data, array('pc_id = ?' => $id));        }    }            public function find($id, Produit_Model_CategorieUnite $categorie )    {                $result = $this->getDbTable()->find($id);        if (0 == count($result)) {            return;        }        $row = $result->current();        $static     ->setId($row->pc_id)                    ->setCategorieUnite($row->pc_categorie);    }    public function fetchAll()    {        $resultSet = $this->getDbTable()->fetchAll();        $entries   = array();                foreach ($resultSet as $row) {            $entry = new Produit_Model_CategorieUnite();            $entry  ->setId($row->pc_id)                    ->setCategorieUnite($row->pc_categorie);            $entries[] = $entry;        }        return $entries;    }       public function fetchWithProducts( $pc_id )    {        $query      = $this -> getDbTable()                                                     -> select()                                                ->setIntegrityCheck(false)                                                -> from( array('pc' => 'produit_categorie_unite'),                                                         array(                                                                'LOWER("pc.pc_categorie")',                                                              )                                                       )                                                -> join(array('pa' => 'produit_unite',),                                                        'pc.pc_id = pa.pc_id'                                                       )                                                -> where( 'pc.pc_id= "'.$pc_id.'"' );         $resultSet  = $this->getDbTable()->fetchAll( $query );                                   foreach ($resultSet as $row) {            $entry = new Produit_Model_Unite();            $entry  ->setId($row->pa_id)                    ->setTitre($row->pa_titre)                    ->setDescription($row->pa_description)                    ->setPrix($row->pa_prix)                    ->setPcid($row->pc_id);            $entries[] = $entry;        }        return $entries;    }}