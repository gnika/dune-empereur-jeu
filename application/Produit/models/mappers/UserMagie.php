<?phpclass Produit_Model_Mapper_UserMagie{    protected $_dbTable;    protected $_auth;            public function init()     {            }        public function setDbTable($dbTable)    {        if (is_string($dbTable)) {            $dbTable = new $dbTable();        }        if (!$dbTable instanceof Zend_Db_Table_Abstract) {            throw new Exception('Invalid table data gateway provided');        }        $this->_dbTable = $dbTable;        return $this;    }    public function getDbTable()    {        if (null === $this->_dbTable) {            $this->setDbTable('Produit_Model_DbTable_UserMagie');        }        return $this->_dbTable;    }        public function save(Produit_Model_Magie $Magie, $id)    {           $this->_auth = Zend_Auth::getInstance();        $member = $this->_auth->getIdentity();        if ($member == null) {            die('error');        };        $magieMapper=new Produit_Model_Mapper_Magie();        $magieMapper->find($id, $Magie);        $query      = $this -> getDbTable()     -> select()                                                -> where( 'um_magie_id= "'.$id.'" and um_user_id="'.$member->cuu_id.'"' );         $row  = $this->getDbTable()->fetchRow( $query );                            $decrement_user= new Customer_Model_Mapper_User();          $user= new Customer_Model_User();          $decrement_user->find($member->cuu_id, $user);                  if($decrement_user->achatMagie($user, $Magie)===false){            $message='ressources insuffisantes pour satisfaire tout vos besoins.';            Application_Common::addSystemError($message);            return false;        }          $decrement_user->save($user);          $magieUser=    new Produit_Model_UserMagie();            if(count($row)!=0)            {                $magieUser      ->setUserId($row->um_user_id )                    ->setMagieId($id)                    ->setDuree(0)                    ->setQuantite($row->um_quantite + 1);                  $data = array('um_quantite'  =>  $magieUser ->getQuantite());                $this->getDbTable()->update($data,                 array('um_user_id  = ?' => $row->um_user_id,                'um_magie_id = ?' =>$row->um_magie_id));            }            else            {                $data = array(  'um_user_id'             => $member->cuu_id,                                'um_magie_id'    => $id,                                'um_quantite'            => 1,                                'um_duree'              =>  0,                                'um_cible_id'              =>  0                            );                $this->getDbTable()->insert($data);            }              }                        public function fetchAllbyUser($id)    {         $this->_auth = Zend_Auth::getInstance();        $member = $this->_auth->getIdentity();        if ($member == null) {            die('error');        };                $query      = $this -> getDbTable()     -> select()                                                -> setIntegrityCheck(false)                                                -> from( array( 'ub' => 'user_magie' ),                                                         array( 'ub.um_magie_id',                                                                'ub.um_quantite',                                                                 'ub.um_user_id',                                                                'ub.um_duree',                                                                'ub.um_cible_id'                                                               )                                                       )                                                -> join(array('pb' => 'produit_magie'),                                                        'pb.pm_id = ub.um_magie_id'                                                       )                                                -> where( 'ub.um_user_id= "'.$id.'"' );        $resultSet  = $this->getDbTable()->fetchAll( $query );                  if (!$resultSet) {            return;        }        $entree=array();        $entreefinal=array();        foreach ($resultSet as $row) {            $entree['um_user_id']=$row->um_user_id;            $entree['um_magie_id']=$row->um_magie_id;            $entree['um_duree']=$row->um_duree;            $entree['um_cible_id']=$row->um_cible_id;            $entree['um_quantite']=$row->um_quantite;            $entree['pm_titre']=$row->pm_titre;            $entree['pm_image']=$row->pm_image;                 $entree['pm_multi_or']= $row->pm_multi_or;            $entree['pm_multi_bois']= $row->pm_multi_bois;            $entree['pm_multi_population']= $row->pm_multi_population;            $entree['pm_multi_mana']= $row->pm_multi_mana;            $entree['pm_multi_pillage']= $row->pm_multi_pillage;            $entreefinal[]=$entree;        }        return $entreefinal;    }            public function findEnCours($id)    {        $query      = $this -> getDbTable()     -> select()                                                -> setIntegrityCheck(false)                                                -> from( array( 'ub' => 'user_magie' ),                                                         array( 'ub.um_magie_id',                                                                'ub.um_quantite',                                                                 'ub.um_user_id',                                                                'ub.um_duree',                                                                'ub.um_cible_id'                                                               )                                                       )                                                -> join(array('pb' => 'produit_magie'),                                                        'pb.pm_id = ub.um_magie_id'                                                       )                                                -> where( 'ub.um_cible_id= "'.$id.'"' );            $resultSet  = $this->getDbTable()->fetchAll( $query );          if (!$resultSet) {            return;        }        $entree=array();        $entreefinal=array();        foreach ($resultSet as $row) {            $entree['um_user_id']=$row->um_user_id;			$entree['um_cible_id']=$row->um_user_id;            $entree['um_magie_id']=$row->um_magie_id;            $entree['um_duree']=$row->um_duree;            $entree['pm_titre']=$row->pm_titre;            $entree['pm_image']=$row->pm_image;                 $entree['pm_multi_or']= $row->pm_multi_or;            $entree['pm_multi_bois']= $row->pm_multi_bois;            $entree['pm_multi_population']= $row->pm_multi_population;            $entree['pm_multi_mana']= $row->pm_multi_mana;            $entree['pm_multi_pillage']= $row->pm_multi_pillage;			$entree['pm_attaque']= $row->pm_attaque;			$entree['pm_defense']= $row->pm_defense;			$entree['pm_magie']= $row->pm_magie;            $entreefinal[]=$entree;        }        return $entreefinal;            }        }